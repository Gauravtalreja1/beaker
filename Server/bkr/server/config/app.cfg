[global]
# The settings in this file should not vary depending on the deployment
# environment. dev.cfg and prod.cfg are the locations for
# the different deployment settings. Settings in this file will
# be overridden by settings in those other files.

# The commented out values below are the defaults

# VIEW

# which view (template engine) to use if one is not specified in the
# template name
tg.defaultview = "kid"

# The following kid settings determine the settings used by the kid serializer.

# Kid output method (e.g. html, html-strict, xhtml, xhtml-strict, xml, json)
# and formatting (e.g. default, straight, compact, newlines, wrap, nice)
# kid.outputformat="html default"

kid.encoding="utf-8"

# The sitetemplate is used for overall styling of a site that
# includes multiple TurboGears applications
# tg.sitetemplate="<packagename.templates.templatename>"

# Allow every exposed function to be called as json,
# tg.allow_json = False

# Suppress the inclusion of the shipped MochiKit version, which is rather outdated.
# Attention: setting this to True and listing 'turbogears.mochikit' in 'tg.include_widgets'
# is a contradiction. This option will overrule the default-inclusion to prevent version
# mismatch bugs.
# tg.mochikit_suppress = True

# List of Widgets to include on every page.
# for example ['turbogears.mochikit']
tg.include_widgets = ['turbogears.mochikit', 'bkr.server.widgets.jquery', 'bkr.server.widgets.local_datetime']
tg_mochikit.version = '1.4.2'

# Set to True if the scheduler should be started
tg.scheduler = False

# Set to True to allow paginate decorator redirects when page number gets
# out of bound. Useful for getting the real page id in the url
# paginate.redirect_on_out_of_range = True

# Set to True to allow paginate decorator redirects when last page is requested.
# This is useful for getting the real last page id in the url
# paginate.redirect_on_last_page = True

# Set session or cookie
# session_filter.on = True

# TurboGears visit and identity frameworks are no longer used. Beaker has its 
# own implementation instead.
visit.on=False
identity.on=False
# In our implementation this config option is still used to control token timeouts.
visit.timeout=360

sqlalchemy.convert_unicode=True

mail.message.encoding = 'utf-8'
mail.utf8qp.on = True

# CherryPy's autoreload mechanism is not compatible with other WSGI containers.
#autoreload.package="bkr.server"
autoreload.on = False

# compress the data sends to the web browser
# [/]
# gzip_filter.on = True
# gzip_filter.mime_types = ["application/x-javascript", "text/javascript", "text/html", "text/css", "text/plain"]

beaker.bz_create_link = "https://bugzilla.redhat.com/enter_bug.cgi?product=Beaker"
beaker.documentation_link = 'http://beaker-project.org/help.html'

[/logs]
static_filter.on = True
static_filter.dir = "/var/www/beaker/logs"

[/rpms]
static_filter.on = True
static_filter.dir = "/var/www/beaker/rpms"

[/schema]
static_filter.on = True
static_filter.dir = "%(top_level_dir)s/common/schema"
static_filter.content_types = {'rng': 'text/xml'}

[/static]
static_filter.on = True
static_filter.dir = "%(package_dir)s/static"

[/favicon.ico]
static_filter.on = True
static_filter.file = "%(package_dir)s/static/images/favicon.ico"

# Ensure a logging section is present, to suppress TG's backwards compatible 
# "old-style" logging. But we don't actually configure any logging stuff 
# through TG so this section should always be empty.
[logging]
