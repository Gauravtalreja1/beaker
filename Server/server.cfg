[global]
# This is where all of your settings go for your production environment.
# You'll copy this file over to your production server and provide it
# as a command-line option to your start script.
# Settings that are the same for both development and production
# (such as template engine, encodings, etc.) all go in 
# beaker/server/config/app.cfg

# DATABASE

# pick the form for your database
# sqlobject.dburi="postgres://username@hostname/databasename"
# sqlobject.dburi="mysql://username:password@hostname:port/databasename"
# sqlobject.dburi="sqlite:///file_name_and_path"

# If you have sqlite, here's a simple default to get you started
# in development
#sqlalchemy.dburi="sqlite:///devdata.sqlite"
sqlalchemy.dburi="mysql://beaker:beaker@localhost/beaker?charset=utf8"
sqlalchemy.pool_recycle = 3600

# If you want to send read-only report queries to a separate slave 
# database, configure it here. If not configured, report queries will 
# fall back to using the main Beaker database (above).
#reports_engine.dburi = 'mysql://beaker_ro:beaker_ro@dbslave/beaker?charset=utf8'
#reports_engine.pool_recycle = 3600

# if you are using a database or table type without transactions
# (MySQL default, for example), you should turn off transactions
# by prepending notrans_ on the uri
# sqlobject.dburi="notrans_mysql://username:password@hostname:port/databasename"

# for Windows users, sqlite URIs look like:
# sqlobject.dburi="sqlite:///drive_letter:/path/to/file"


# Set rlimit_as if you want to limit the beaker processes address space to that
# size in bytes
# rlimit_as=1000000000

##
## TurboMail settings
##
mail.on = False
mail.manager = 'immediate'
mail.transport = 'smtp'
mail.provider = 'smtp'
mail.smtp.server = '127.0.0.1'

beaker_email='root@localhost.localdomain'

# If this is set to a value greater than zero, Beaker will enforce a limit on 
# the number of concurrently running power/provision commands in each lab. Set 
# this option if you have a lab with many machines and are concerned about 
# a flood of commands overwhelming your lab controller.
#beaker.max_running_commands = 10

# Timeout for authentication tokens. After this many minutes of inactivity 
# users will be required to re-authenticate.
#visit.timeout=360

# Secret key for encrypting authentication tokens. Set this to a very long 
# random string and DO NOT disclose it. Changing this value will invalidate all 
# existing tokens and force users to re-authenticate.
#visit.token_secret_key = ''

identity.ldap.enabled=False
#identity.soldapprovider.uri="ldaps://ldap.domain.com"
#identity.soldapprovider.basedn="dc=domain,dc=com"
#identity.soldapprovider.autocreate=True
#identity.soldapprovider.timeout=20
#identity.krb_auth_principal='HTTP/HOSTNAME@EXAMPLE.COM'
#identity.krb_auth_keytab='/etc/krb5.keytab'

# If using qpid, the principals are used as follows:-
#  identity.krb_auth_qpid_principal - Any calls to the qpid broker uses this value
# 
# The idea is that whichever process is running and using qpid, should ensure that it sets the
# krb_auth_qpid_principal to the correct value for itself. Ditto with the keytab

#identity.krb_auth_qpid_principal='beaker-server/HOSTNAME@EXAMPLE.COM'
#identity.krb_auth_qpid_keytab='/etc/beaker/beaker-server.keytab'

#identity.krb_auth_beakerd_principal='beakerd/HOSTNAME@EXAMPLE.COM'
#identity.krb_auth_beakerd_keytab='/etc/beaker/beakerd.keytab'

#identity.krb_auth_server_principal='beaker-server/HOSTNAME@EXAMPLE.COM'
#identity.krb_auth_server_keytab='/etc/beaker/beaker-server.keytab'


# File Locations
basepath.logs='/var/www/beaker/logs'
basepath.rpms='/var/www/beaker/rpms'
basepath.repos='/var/www/beaker/repos'
basepath.harness='/var/www/beaker/harness'

# SERVER

# if this is part of a larger site, you can set the path
# to the TurboGears instance here
server.webpath="/bkr/"

tg.strict_parameters = True

# Set to True if you are deploying your App behind a proxy
# e.g. Apache using mod_proxy
# base_url_filter.on = False

# Set to True if your proxy adds the x_forwarded_host header
# base_url_filter.use_x_forwarded_host = True

# If your proxy does not add the x_forwarded_host header, set
# the following to the *public* host url.
# (Note: This will be overridden by the use_x_forwarded_host option
# if it is set to True and the proxy adds the header correctly.
# base_url_filter.base_url = "http://www.example.com"

# These are used when generating absolute URLs (e.g. in e-mails sent by Beaker)
# You should only have to set this if socket.gethostname() returns the wrong
# name, for example if you are using cnames.
#tg.url_domain = "beaker.example.com"
# If your scheduler is multi-home and has a different hostname to your test
# machines you can use the tg.lab_domain variable here to specify it
# If tg.lab_domain is not set it will fall back to url_domain, and if that's
# not set it will fall back to socket.gethostname() of course.
#tg.lab_domain = "this.hostname.from.lab.domain"
tg.url_scheme = "http"

# Tag for distros which are considered "reliable".
# Broken system detection logic will be activated for distros with this tag 
# (see the bkr.server.model:System.suspicious_abort method). Leave this unset 
# to deactivate broken system detection.
#beaker.reliable_distro_tag = "RELEASED"

# The contents of this file will be displayed to users on every page in Beaker. 
# If it exists, it must contain a valid HTML fragment (e.g. <span>...</span>).
#beaker.motd = "/etc/beaker/motd.xml"

# The URL of a page describing your organisation's policies for reserving 
# Beaker machines. If configured, a message will appear on the reserve workflow 
# page, warning users to adhere to the policy with a hyperlink to this URL. By 
# default no message is shown.
#beaker.reservation_policy_url = "http://example.com/reservation-policy"

# If both of these options are set, the Piwik tracking javascript snippet will
# be embedded in all pages, reporting statistics back to the given Piwik
# installation.
# Make sure that piwik.base_url is a protocol-relative URL starting with //
#piwik.base_url = "//analytics.example.invalid/piwik/"
#piwik.site_id = 123

# These install options are used as global defaults for every provision. They
# can be overriden by options on the distro tree, the system, or the recipe.
#beaker.ks_meta = ""
#beaker.kernel_options = "ksdevice=bootif"
#beaker.kernel_options_post = ""

# See BZ#1000861
# beaker.deprecated_job_group_permissions.on = True

# When generating MAC addresses for virtual systems, Beaker will always pick 
# the lowest free address starting from this base address.
#beaker.base_mac_addr = "52:54:00:00:00:00"

# When generating RPM repos, we can configure what utility
# to use. So far, only 'createrepo' and 'createrepo_c' have been
# tested. See https://github.com/Tojaj/createrepo_c
#beaker.createrepo_command = 'createrepo'

# Uncomment these two options when using HTTP digest authentication.
#beaker.log_delete_user = 'log-delete'
#beaker.log_delete_password = 'examplepassword'

# If carbon.address is set, Beaker will send various metrics to carbon 
# (collection daemon for Graphite) at the given address. The address must be 
# a tuple of (hostname, port).
# The value of carbon.prefix is prepended to all names used by Beaker.
#carbon.address = ('graphite.example.invalid', 2023)
#carbon.prefix = 'beaker.'

# If utilising qpid, ensure you have the python qpid
# modules installed
#beaker.qpid_topic_exchange = 'amqp.topic'

# The hostname of the qpid broker
#beaker.qpid_broker = 'localhost'

# Set to True if the qpid broker requires krb authentication
#beaker.qpid_krb_auth = False

# Use OpenStack for running recipes on dynamically created guests.
#openstack.identity_api_url = 'https://openstack.example.com:5000/v2.0'

[/logs]
static_filter.on = True
static_filter.dir = "/var/www/beaker/logs"

[/rpms]
static_filter.on = True
static_filter.dir = "/var/www/beaker/rpms"

[/static]
static_filter.on = True
static_filter.dir = "/usr/share/bkr/server/static"

[/favicon.ico]
static_filter.on = True
static_filter.file = "/usr/share/bkr/server/static/images/favicon.ico"

# Beaker logs to syslog.
# To adjust destination log filenames, edit the syslog config.
# To adjust rotation settings, edit the logrotate config.
