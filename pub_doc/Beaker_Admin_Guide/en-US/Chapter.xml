<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Beaker_Admin_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-Beaker_Admin_Guide-Beaker">
	<title>Installing Beaker</title>
	<section id="chap-Beaker_Admin_Guide-Beaker-Setup">
	<title>Installing Dependencies</title>
	<para>	
		Please add the beaker.repo file that Red Hat
provided for you on the machine(s) that will be running your Scheduler
and Lab Controller. The following should be done as root.
	<warning><title>Disabling Repos</title>
	<para>
		Please disable other repos to ensure that packages are installed from the beaker repo.
	</para>
	</warning>
	</para>	
	<para>

		 Install the dependencies:
		<screen>
<userinput><prompt>$</prompt> yum -y install rpm-build python-devel TurboGears python-TurboMail</userinput>
<userinput><prompt>$</prompt> yum -y install mod_wsgi python-decorator python-tgexpandingformwidget python-xmltramp</userinput>
		</screen>
        </para>
        </section>
	<section id="chap-Beaker_Admin_Guide-Beaker-Yum">
	<title>Installing from Yum</title>
	<para>
                Install Beaker libs and server.
		<screen>
<userinput><prompt>$</prompt> yum install beaker-libs</userinput>
<userinput><prompt>$</prompt> yum install beaker-server</userinput>
		</screen>

	</para>
</section>	
	<section id="chap-Beaker_Admin_Guide-Beaker-DB">
	<title>Install DB</title>
    <para>
    	Beaker supports MySQL,MSSQL,Oracle,MaxDB,PostgreSQL, and SQLite. For this tutorial,we will use MySQL. First, make sure MySQL server is installed, and configure
    	the daemon to run at startup.
    	<screen>
$ <userinput>yum install -y mysql-server MySQL-python</userinput>
$ <userinput>chkconfig mysqld on</userinput>
$ <userinput>service mysqld start</userinput>
	</screen>
    
	Create a database, and grant access to beaker user. You can put the database on the local machine, or on a remote machine. In the example below, the database is hosted on
	the local machine.
   	<screen>
$ <userinput>echo "create database beaker;" | mysql</userinput>
$ <userinput>echo "grant all on beaker.* to 'beaker'@'localhost' IDENTIFIED BY 'beaker';"| mysql</userinput>
	</screen>
	Now let's initialise our DB with tables.
	We'll also create an admin account called <literal>admin</literal> with password <literal>testing</literal>.
	<warning><title>Table type</title>
	<para> Beaker requires a transactional DB. If using a Database that default to something else (i.e MySQL defaults to MyISAM), either the default table type
	      for the database needs to be changed (to InnoDB in MySQL's case) or the user will have to convert the tables to a transactional DB after running beaker-init.
	</para>
        <para> You can change the default storage engine for mysql by editing the file /etc/my.cnf and adding the following line in the [mysqld] section.
        </para>
        <screen>
default-storage-engine=INNODB
        </screen>
	</warning>
	<screen>
$ <userinput>beaker-init -u admin -p testing -e <replaceable>admin_email_address</replaceable></userinput>
	</screen>

    </para>

</section>

	<section id="chap-Beaker_Admin_Guide-Beaker-Run">
	<title>Start Beaker</title>
	<para>
	We are now ready to start the Beaker service. First make sure apache is on and configured to run on startup.
	<screen>
$ <userinput>sudo chkconfig httpd on</userinput>
$ <userinput>sudo /sbin/service/httpd start</userinput>
	</screen>
	We need to switch SELinux off.
	<screen>
$ <userinput>setenforce 0</userinput>
	</screen>
	Due to permission issues, we need to delete the log file before we start Beaker for the first time.
	<screen>
$ <userinput>sudo rm /etc/beaker/server*.log</userinput>
	</screen>
	Start Beaker and configure it to run on startup.
	<screen>
$ <userinput>sudo chkconfig beakerd on</userinput>
$ <userinput>sudo /sbin/service beakerd start</userinput>
	</screen>
	To make sure Beaker is running go to <literal>http://BeakerServer.example.com/bkr/</literal> in your browser.
	</para>
	</section>

	<section id="chap-Beaker_Admin_Guide-Beaker-Lab_details">
	<title>Add Lab Controller details</title>
	<para> One more step we need to do is add the Lab Controller we have yet to configure (<xref linkend="chap-Beaker_Admin_Guide-Lab_Controllers" />).
	       Login in at http://BeakerServer.example.com/bkr/labcontrollers/new. Use the username and password above from the beaker-init command.
	       The new lab controller form requires 3 fields
	       <variablelist>
		<varlistentry><term>FQDN</term>
			<listitem><para> This is the fully qualified domain name of the lab controller.</para></listitem>
		</varlistentry>

		<varlistentry><term>Username</term>
			<listitem><para>This is the login name we will use for xmlrpc, for the purposes of this document will use the login name <literal>testing</literal></para></listitem>
		</varlistentry>

		<varlistentry><term>Password</term>
			<listitem><para>This is the password that goes along with the username, again we will use : testing </para></listitem>
		</varlistentry>
		</variablelist>

		The new lab controller also needs a user account. Login at http://BeakerServer.example.com/bkr/users/new.

	       <variablelist>
		<varlistentry><term>Login</term>
			<listitem><para> Should be the host/<replaceable>FQDN</replaceable> (<replaceable>FQDN</replaceable> is the fully qualified domain of the lab controller).</para></listitem>
		</varlistentry>

		<varlistentry><term>Display Name</term>
			<listitem><para>Should be just <replaceable>FQDN</replaceable>.</para></listitem>
		</varlistentry>

		<varlistentry><term>Email adrress</term>
			<listitem><para>The email address should be root@<replaceable>FQDN</replaceable>.</para></listitem>
		</varlistentry>

		<varlistentry><term>Password</term>
			<listitem><para>If you are not using Kerberos authentication, you will need a password here.</para></listitem>
		</varlistentry>
		</variablelist>
		Save the form and we are done with the Inventory side for now. 
		</para>
	</section>
</chapter>

