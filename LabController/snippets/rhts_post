#if $getVar('recipeid','') != ''
echo $recipeid > /root/RECIPE.TXT
#end if
$yum_config_stanza
# End yum configuration
#$SNIPPET('post_install_kernel_options') # this no longer works with RHEL6
$SNIPPET('func_register_if_enabled')
$SNIPPET('download_config_files')
$SNIPPET('koan_environment')
$SNIPPET('redhat_register')
# Enable post-install boot notification
$SNIPPET('post_anamon')
$SNIPPET('readahead_sysconfig')

## Turn on ntpd
/sbin/chkconfig ntpdate on
/sbin/chkconfig ntpd on
echo 'OPTIONS="\$OPTIONS -x"' >>/etc/sysconfig/ntpd

#if $getVar('grubport','') != ''
#/bin/sed -i 's/^serial.*/serial --port=$grubport --speed=115200/' /boot/grub/grub.conf
/bin/sed -i 's/^\(serial.*\)--unit=\S\+\(.*\)\$/\1--port=$grubport\2/' /boot/grub/grub.conf
#end if

# If efibootmgr exists then re-order boot options
if [ -x '/usr/sbin/efibootmgr' ]; then
    BOOT=\$(/usr/sbin/efibootmgr -v | grep BootOrder | awk '{print \$2}' | awk -F, '{print \$1}')
    EFI=\$(/usr/sbin/efibootmgr -v | grep Boot\$BOOT | awk '{print \$NF}')
    PXE_SLOT=\$(/usr/sbin/efibootmgr -v | grep -i Netboot |cut -c5-8)
    #
    # If There is no Netboot Entry we can't continue
    # You have to manually setup a Netboot entry first
    # from EFI maint menu.
    #
    if [ ! -z \$PXE_SLOT ]; then
       NEWBOOT=\$(echo \$BOOT| sed -e 's/\$PXE_SLOT,//')
       # its cheesy. but it works.
       NEWBOOT=\$(echo \$NEWBOOT| sed -e 's/,\$PXE_SLOT,//')
       NEWBOOT=\$(echo \$NEWBOOT| sed -e 's/,\$PXE_SLOT//')
       /usr/sbin/efibootmgr -o \$PXE_SLOT,\$NEWBOOT
       /usr/sbin/efibootmgr -n \$BOOT
    fi
fi

#set $yum = $getVar("yum","")
#if $yum == ""
    #if $os_version == "rhel3"
        #set $yum = "yum-2.2.2-1.rhts.EL3.noarch.rpm"
    #end if
    #if $os_version == "rhel4"
        #set $yum = "yum-2.2.2-1.rhts.EL4.noarch.rpm"
    #end if
#end if

#if $yum != ""
# Install Yum
pushd /root
/usr/bin/wget -N http://$server/beaker/$yum
/bin/rpm -Uvh $yum
popd
#end if

# Add Repos
#set potential_repos = ['os_repos','debug_repos','optional_repos', 'customrepos']
#for potential_repo in $potential_repos
#if $getVar($potential_repo,'') != ''
#for $repo in $getVar($potential_repo,'').split('|')
#if $repo.find(',') != -1
#set (reponame, repourl) = $repo.split(',',1)
#if $repourl.find('nfs://') != -1
## If repo begins with nfs we remap it to http://$server/net/....
#set (nfsserver, path) = repourl[6:].split(':',1)
#set repourl = 'http://%s/net/%s%s' % ($server,$nfsserver, path)
#end if ## nfs
cat << EOF >/etc/yum.repos.d/${reponame}.repo
[$reponame]
name=$reponame
baseurl=$repourl
enabled=1
gpgcheck=0
skip_if_unavailable=1
EOF
#end if ## ,
#end for ## repo
#end if ## potential_repo
#end for ## potential_repo

# Add Distro Repos
#set $tree_repos = $getVar('tree_repos','')
#if $tree_repos != ''
#if $tree_repos.find("http://") != -1
#set $split = "|"
#set $base = ""
#else
#set $split = ":"
#set $base = "http://%s/distros" % $server
#end if
#set $i = 0
#for $repo in $getVar('tree_repos','').split($split)
#set $i = $i + 1
#if $repo.find(",") != -1
#set (reponame, repourl) = $repo.split(',',1)
#else
#set $reponame = "beaker-distro%s" % i
#set $repourl = $repo
#end if
cat << EOF > /etc/yum.repos.d/${reponame}.repo
[$reponame]
name=$reponame
baseurl=$base$repourl
enabled=1
gpgcheck=0
skip_if_unavailable=1
EOF
#end for
#end if

#Add Task Repo
#if $getVar('taskrepo','') != ''
#set (reponame, repourl) = $getVar('taskrepo').split(',', 1)
cat << EOF >/etc/yum.repos.d/${reponame}.repo
[$reponame]
name=$reponame
baseurl=$repourl
enabled=1
gpgcheck=0
EOF
#end if


# Add Harness Repo
#if $getVar('harnessrepo','') != ''
#set (reponame, repourl) = $getVar('harnessrepo').split(',', 1)
cat << EOF >/etc/yum.repos.d/${reponame}.repo
[$reponame]
name=$reponame
baseurl=$repourl
enabled=1
gpgcheck=0
EOF
#end if

# fill the yum cache and redirect output to /dev/null
# This speeds up yum because of a bug where it will update stdout too often.
# http://lists.baseurl.org/pipermail/yum-devel/2011-December/008857.html
yum check-update > /dev/null 2>&1 || true
# Install old rhts commands
yum -y --disablerepo=* --enablerepo=beaker-* install rhts-test-env-lab rhts-legacy
## If koan is available install it.  This allows for easy re-installs
yum -y --disablerepo=* --enablerepo=beaker-* install koan
# Install new harness
yum -y --disablerepo=* --enablerepo=beaker-* install beah
# This may fail if you are outside of Red Hat..
yum -y --disablerepo=* --enablerepo=beaker-* install beakerlib-redhat

cp /etc/beah_beaker.conf{,.default}
cat << EOF > /etc/beah_beaker.conf
# see /etc/beah_beaker.conf.default for commented configuration

[DEFAULT]
# LAB_CONTROLLER: URI of Beaker's XML-RPC handler
LAB_CONTROLLER=http://$server:8000
#
# HOSTNAME: Pretend to be machine with given name.
# NOTE: This is mostly pointless as usually correct name is assigned by DHCP.
HOSTNAME=$name
#if $getVar('recipeid','') != ''
RECIPEID=$recipeid
#end if

# Turn on hard limits on upload sizes:
FILE_SIZE_LIMIT=200000000
TASK_SIZE_LIMIT=800000000

EOF

cp /etc/beah.conf{,.default}
cat << EOF > /etc/beah.conf
# see /etc/beah.conf.default for commented configuration

[DEFAULT]
# Turn on more verbose logging and redirect to console. This is useful for
# debugging harness' problems.
LOG=Info
CONSOLE_LOG=Console
# To turn on debug logging uncomment the following line. Warning: this is
# rather verbose! This also requires LOG to be Debug.
#DEVEL=True

[TASK]
INTERFACE=

EOF

chkconfig --level 345 beah-srv on
chkconfig --level 345 beah-beaker-backend on
chkconfig --level 345 beah-fwd-backend on

# turn on rhts-compat by default (it will save us one reboot):
chkconfig --add rhts-compat
chkconfig --level 345 rhts-compat on

#Add test user account
useradd --password '\$6\$oIW3o2Mr\$XbWZKaM7nA.cQqudfDJScupXOia5h1u517t6Htx/Q/MgXm82Pc/OcytatTeI4ULNWOMJzvpCigWiL4xKP9PX4.' test
$SNIPPET('post_koan')
$SNIPPET('lab_env')
$kickstart_done
$SNIPPET('post_s390_reboot')
