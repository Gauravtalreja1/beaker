$yum_config_stanza
# End yum configuration
#$SNIPPET('post_install_kernel_options') # this no longer works with RHEL6
$SNIPPET('func_register_if_enabled')
$SNIPPET('download_config_files')
$SNIPPET('koan_environment')
$SNIPPET('redhat_register')
# Enable post-install boot notification
$SNIPPET('post_anamon')

## Turn on ntpd
/sbin/chkconfig ntpdate on
/sbin/chkconfig ntpd on
echo 'OPTIONS="\$OPTIONS -x"' >>/etc/sysconfig/ntpd

#if $getVar('grubport','') != ''
#/bin/sed -i 's/^serial.*/serial --port=$grubport --speed=115200/' /boot/grub/grub.conf
/bin/sed -i 's/^\(serial.*\)--unit=\S\+\(.*\)\$/\1--port=$grubport\2/' /boot/grub/grub.conf
#end if

# If efibootmgr exists then re-order boot options
if [ -x '/usr/sbin/efibootmgr' ]; then
    BOOT=\$(/usr/sbin/efibootmgr -v | grep BootOrder | awk '{print \$2}' | awk -F, '{print \$1}')
    EFI=\$(/usr/sbin/efibootmgr -v | grep Boot\$BOOT | awk '{print \$NF}')
    PXE_SLOT=\$(/usr/sbin/efibootmgr -v | grep -i Netboot |cut -c5-8)
    #
    # If There is no Netboot Entry we can't continue
    # You have to manually setup a Netboot entry first
    # from EFI maint menu.
    #
    if [ ! -z \$PXE_SLOT ]; then
       NEWBOOT=\$(echo \$BOOT| sed -e 's/\$PXE_SLOT,//')
       # its cheesy. but it works.
       NEWBOOT=\$(echo \$NEWBOOT| sed -e 's/,\$PXE_SLOT,//')
       NEWBOOT=\$(echo \$NEWBOOT| sed -e 's/,\$PXE_SLOT//')
       /usr/sbin/efibootmgr -o \$PXE_SLOT,\$NEWBOOT
       /usr/sbin/efibootmgr -n \$BOOT
    fi
fi

#set $yum = $getVar("yum","")
#if $yum == ""
    #if $os_version == "rhel3"
        #set $yum = "yum-2.2.2-1.rhts.EL3.noarch.rpm"
    #end if
    #if $os_version == "rhel4"
        #set $yum = "yum-2.2.2-1.rhts.EL4.noarch.rpm"
    #end if
#end if

#if $yum != ""
# Install Yum
pushd /root
/usr/bin/wget -N http://$server/beaker/$yum
/bin/rpm -Uvh $yum
popd
#end if

# Add Distro Repos
#if $getVar('tree_repos','') != ''
#set $i = 0
#for $repo in $getVar('tree_repos','').split(':')
#set $i = $i + 1
#if $repo.find(",") != -1
#set (reponame, repourl) = $repo.split(',',1)
#else
#set $reponame = "beaker-distro%s" % i
#set $repourl = $repo
#end if
cat << EOF > /etc/yum.repos.d/${reponame}.repo
[$reponame]
name=$reponame
baseurl=http://$server/distros$repourl
enabled=1
gpgcheck=0
EOF
#end for
#end if

# Add Harness Repos
#if $getVar('harnessrepos','') != ''
#for $repo in $getVar('harnessrepos','').split('|')
#set (reponame, repourl) = $repo.split(',', 1)
cat << EOF >/etc/yum.repos.d/${reponame}.repo
[$reponame]
name=$reponame
baseurl=$repourl
enabled=1
gpgcheck=0
EOF
#end for
#end if

# Add Custom Repos
#if $getVar('customrepos','') != ''
#set $i = 0
#for $repo in $getVar('customrepos','').split('|')
#set $i = $i + 1
#if $repo.find(",") != -1
#set (reponame, repourl) = $repo.split(',', 1)
#else
#set $reponame = "customrepo%s" % i
#set $repourl = $repo
#end if
cat << EOF >/etc/yum.repos.d/${reponame}.repo
[$reponame]
name=$reponame
baseurl=$repourl
enabled=1
gpgcheck=0
EOF
#end for
#end if

#if $getVar('rhts_server','') != ''
# Add RHTS Test Repo
cat << EOF > /etc/yum.repos.d/rhts-tests.repo
[rhts-noarch]
name=rhts tests $testrepo
baseurl=http://$rhts_server/rpms/$testrepo/noarch/noarch
enabled=1
gpgcheck=0
EOF

# Install RHTS RPMS
yum -y --disablerepo=* --enablerepo=rhts-noarch \
                       --enablerepo=distro* \
                       --enablerepo=customrepo* install rhts-test-env-lab rhts-legacy
yum -y --disablerepo=* --enablerepo=rhts-noarch \
                       --enablerepo=distro* \
                       --enablerepo=customrepo*  install yum-utils

# Record recipeid in /root/RECIPE.TXT if defined
#if $getVar('recipeid','') != ''
echo $recipeid >/root/RECIPE.TXT
#end if

# Get the RHTS job
#if $getVar('runtest_url','') != ''
wget -O /mnt/tests/runtests.sh http://$rhts_server/testlogs/$runtest_url
#else
wget -O /mnt/tests/runtests.sh http://$rhts_server/testlogs/recipes/$recipeid/runtests.sh
#end if
chmod 755 /mnt/tests/runtests.sh
#end if

# Install old rhts commands
yum -y --disablerepo=* --enablerepo=beaker-* install rhts-test-env-lab rhts-legacy
## If koan is available install it.  This allows for easy re-installs
yum -y --disablerepo=* --enablerepo=beaker-* install koan
# Install new harness
yum -y --disablerepo=* --enablerepo=beaker-* install beah
# This may fail if you are outside of Red Hat..
yum -y --disablerepo=* --enablerepo=beaker-* install beakerlib-redhat
cat << EOF > /etc/beah_beaker.conf
[DEFAULT]
# LAB_CONTROLLER: URI of Beaker's XML-RPC handler
LAB_CONTROLLER=http://$server:8000/server
#
# # HOSTNAME: Pretend to be machine with given name:
# #HOSTNAME=fake.hostname.com
HOSTNAME=$name

# LIMITS: hard and soft cap on filesize or amount of data uploaded.
# Limit is specified in bytes and numeric value is expected. Use 0 or negative
# value to specify no limit.
# Files/Tasks reaching soft limit will result in warning, while file/task
# reaching hard limit will raise a warning and also the file upload will be
# stopped.
# Size limit limits the file size, while upload limit limits the number of
# bytes uploaded. These are not necessarily the same, as block may be send
# multipe times, though this is not recomended as it will rewrite data.
# Link limit sets the cap on number of files created by task/recipe.

# FILE_SIZE_LIMIT, FILE_SIZE_SOFT_LIMIT: hard and soft cap on filesize.
FILE_SIZE_SOFT_LIMIT=200000000
#FILE_SIZE_LIMIT=0

# TASK_SIZE_LIMIT, TASK_SIZE_LIMIT_SOFT: hard and soft cap on size of all
# files per task.
TASK_SIZE_LIMIT_SOFT=800000000
#TASK_SIZE_LIMIT=0

# RECIPE_SIZE_LIMIT, RECIPE_SIZE_LIMIT_SOFT: hard and soft cap on size of all
# files per recipe.
#RECIPE_SIZE_LIMIT_SOFT=0
#RECIPE_SIZE_LIMIT=0

# FILE_UPLOAD_LIMIT, FILE_UPLOAD_SOFT_LIMIT: hard and soft cap on upload per
# file.
#FILE_UPLOAD_SOFT_LIMIT=0
#FILE_UPLOAD_LIMIT=0

# TASK_UPLOAD_LIMIT, TASK_UPLOAD_SOFT_LIMIT: hard and soft cap on all uploads per
# task.
#TASK_UPLOAD_SOFT_LIMIT=0
#TASK_UPLOAD_LIMIT=0

# RECIPE_UPLOAD_LIMIT, RECIPE_UPLOAD_SOFT_LIMIT: hard and soft cap on all uploads
# per recipe.
#RECIPE_UPLOAD_SOFT_LIMIT=0
#RECIPE_UPLOAD_LIMIT=0

# TASK_LINK_LIMIT, TASK_LINK_SOFT_LIMIT: hard and soft cap on number of files per
# task.
#TASK_LINK_SOFT_LIMIT=0
#TASK_LINK_LIMIT=0

# RECIPE_LINK_LIMIT, RECIPE_LINK_SOFT_LIMIT: hard and soft cap on number of
# files per recipe.
#RECIPE_LINK_SOFT_LIMIT=0
#RECIPE_LINK_LIMIT=0
EOF
# To turn on debug logging uncomment the following line. Warning: this is
# rather verbose! This also requires LOG to be Debug.
#/bin/sed -i 's/^DEVEL=.*/DEVEL=True/' /etc/beah.conf
/bin/sed -i 's/^LOG=.*/LOG=Info/' /etc/beah.conf
/bin/sed -i 's/^INTERFACE=localhost/INTERFACE=/' /etc/beah.conf
/bin/sed -i 's/^CONSOLE_LOG=.*/CONSOLE_LOG=Console/' /etc/beah.conf

chkconfig --level 345 beah-srv on
chkconfig --level 345 beah-beaker-backend on
chkconfig --level 345 beah-fwd-backend on

# turn on rhts-compat by default (it will save us one reboot):
chkconfig --add rhts-compat
chkconfig --level 345 rhts-compat on

#Add test user account
useradd --password '\$6\$oIW3o2Mr\$XbWZKaM7nA.cQqudfDJScupXOia5h1u517t6Htx/Q/MgXm82Pc/OcytatTeI4ULNWOMJzvpCigWiL4xKP9PX4.' test
$SNIPPET('post_koan')
$SNIPPET('lab_env')
$kickstart_done
$SNIPPET('post_s390_reboot')
